// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DriveProcedure.proto

#include "DriveProcedure.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace drive_protocol {
}  // namespace drive_protocol
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_DriveProcedure_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_DriveProcedure_2eproto = nullptr;
const uint32_t TableStruct_DriveProcedure_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_DriveProcedure_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024DriveProcedure.proto\022\016drive_protocol\032\r"
  "Request.proto\032\016Response.proto2\216\014\n\016DriveP"
  "rocedure\022f\n\nCreateFile\022).drive_protocol."
  "request.CreateFileRequest\032+.drive_protoc"
  "ol.response.CreateFileResponse\"\000\022c\n\tClos"
  "eFile\022(.drive_protocol.request.CloseFile"
  "Request\032*.drive_protocol.response.CloseF"
  "ileResponse\"\000\022`\n\010ReadFile\022\'.drive_protoc"
  "ol.request.ReadFileRequest\032).drive_proto"
  "col.response.ReadFileResponse\"\000\022c\n\tWrite"
  "File\022(.drive_protocol.request.WriteFileR"
  "equest\032*.drive_protocol.response.WriteFi"
  "leResponse\"\000\022u\n\017FlushFileBuffer\022..drive_"
  "protocol.request.FlushFileBufferRequest\032"
  "0.drive_protocol.response.FlushFileBuffe"
  "rResponse\"\000\022~\n\022GetFileInformation\0221.driv"
  "e_protocol.request.GetFileInformationReq"
  "uest\0323.drive_protocol.response.GetFileIn"
  "formationResponse\"\000\022f\n\nDeleteFile\022).driv"
  "e_protocol.request.DeleteFileRequest\032+.d"
  "rive_protocol.response.DeleteFileRespons"
  "e\"\000\022u\n\017DeleteDirectory\022..drive_protocol."
  "request.DeleteDirectoryRequest\0320.drive_p"
  "rotocol.response.DeleteDirectoryResponse"
  "\"\000\022`\n\010MoveFile\022\'.drive_protocol.request."
  "MoveFileRequest\032).drive_protocol.respons"
  "e.MoveFileResponse\"\000\022`\n\010LockFile\022\'.drive"
  "_protocol.request.LockFileRequest\032).driv"
  "e_protocol.response.LockFileResponse\"\000\022l"
  "\n\014SetEndOfFile\022+.drive_protocol.request."
  "SetEndOfFileRequest\032-.drive_protocol.res"
  "ponse.SetEndOfFileResponse\"\000\022{\n\021SetAlloc"
  "ationSize\0220.drive_protocol.request.SetAl"
  "locationSizeRequest\0322.drive_protocol.res"
  "ponse.SetAllocationSizeResponse\"\000\022{\n\021Set"
  "FileAttributes\0220.drive_protocol.request."
  "SetFileAttributesRequest\0322.drive_protoco"
  "l.response.SetFileAttributesResponse\"\000\022f"
  "\n\nUnlockFile\022).drive_protocol.request.Un"
  "lockFileRequest\032+.drive_protocol.respons"
  "e.UnlockFileResponse\"\000B\022\n\016drive_protocol"
  "P\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_DriveProcedure_2eproto_deps[2] = {
  &::descriptor_table_Request_2eproto,
  &::descriptor_table_Response_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_DriveProcedure_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_DriveProcedure_2eproto = {
  false, false, 1650, descriptor_table_protodef_DriveProcedure_2eproto, "DriveProcedure.proto", 
  &descriptor_table_DriveProcedure_2eproto_once, descriptor_table_DriveProcedure_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_DriveProcedure_2eproto::offsets,
  nullptr, file_level_enum_descriptors_DriveProcedure_2eproto, file_level_service_descriptors_DriveProcedure_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_DriveProcedure_2eproto_getter() {
  return &descriptor_table_DriveProcedure_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_DriveProcedure_2eproto(&descriptor_table_DriveProcedure_2eproto);
namespace drive_protocol {

// @@protoc_insertion_point(namespace_scope)
}  // namespace drive_protocol
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
